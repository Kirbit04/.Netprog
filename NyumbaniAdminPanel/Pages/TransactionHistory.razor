@page "/transactions"
@using System.Collections.Generic
@using System.Linq

<div class="page-container">
    <h1>Transaction History</h1>
    
    <div class="filter-box">
        <label>Filter by Property:</label>
        <select @onchange="FilterByProperty">
            <option value="">All Properties</option>
            @foreach (var property in properties)
            {
                <option value="@property.Id">@property.Name</option>
            }
        </select>
    </div>
    
    <div class="summary-box">
        <div>Total Transactions: <strong>@filteredTransactions.Count</strong></div>
        <div>Total Amount: <strong>KES @filteredTransactions.Sum(t => t.Amount).ToString("N0")</strong></div>
    </div>
    
    <div class="table-container">
        <table class="transaction-table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Property</th>
                    <th>Type</th>
                    <th>Amount (KES)</th>
                    <th>Payment Method</th>
                    <th>Status</th>
                    <th>Reference</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in filteredTransactions)
                {
                    <tr>
                        <td>@transaction.TransactionDate.ToString("yyyy-MM-dd")</td>
                        <td>@GetPropertyName(transaction.PropertyId)</td>
                        <td>@transaction.TransactionType</td>
                        <td class="amount-cell">@transaction.Amount.ToString("N0")</td>
                        <td>@transaction.PaymentMethod</td>
                        <td class="@transaction.Status.ToLower()">@transaction.Status</td>
                        <td>@transaction.ReferenceNumber</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<style>
    .page-container {
        padding: 20px;
        font-family: Arial, sans-serif;
    }
    
    h1 {
        margin-bottom: 20px;
        color: #333;
    }
    
    .filter-box {
        margin-bottom: 20px;
    }
    
    .filter-box select {
        padding: 8px;
        min-width: 200px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }
    
    .summary-box {
        background-color: #f9f9f9;
        padding: 15px;
        border-radius: 5px;
        margin-bottom: 20px;
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
    }
    
    .table-container {
        overflow-x: auto;
    }
    
    .transaction-table {
        width: 100%;
        border-collapse: collapse;
    }
    
    .transaction-table th,
    .transaction-table td {
        padding: 10px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }
    
    .transaction-table th {
        background-color: #f2f2f2;
        font-weight: bold;
    }
    
    .transaction-table tr:hover {
        background-color: #f5f5f5;
    }
    
    .amount-cell {
        text-align: right;
    }
    
    .completed {
        color: green;
    }
    
    .pending {
        color: orange;
    }
    
    .failed {
        color: red;
    }
    
    .refunded {
        color: purple;
    }
    
    @@media (max-width: 768px) {
        .summary-box {
            flex-direction: column;
            gap: 10px;
        }
    }
</style>

@code {
    private List<Property> properties = new List<Property>();
    private List<Transaction> transactions = new List<Transaction>();
    private List<Transaction> filteredTransactions = new List<Transaction>();
    
    protected override void OnInitialized()
    {
        LoadSampleData();
        filteredTransactions = transactions;
    }
    
    private void LoadSampleData()
    {
        // Sample properties
        properties = new List<Property>
        {
            new Property { Id = 1, Name = "Sunset Apartments #101" },
            new Property { Id = 2, Name = "Family Home in Karen" },
            new Property { Id = 3, Name = "Commercial Space in CBD" },
            new Property { Id = 4, Name = "Beachfront Villa in Nyali" },
            new Property { Id = 5, Name = "Investment Land in Syokimau" },
            new Property { Id = 7, Name = "Studio in Parklands" },
            new Property { Id = 10, Name = "Bedsitter in Roysambu" }
        };
        
        // Sample transactions
        transactions = new List<Transaction>
        {
            new Transaction { Id = 1, PropertyId = 7, Amount = 45000, TransactionType = "Rent", PaymentMethod = "M-Pesa", TransactionDate = new DateTime(2023, 8, 5), ReferenceNumber = "QJS8721KL", Status = "Completed" },
            new Transaction { Id = 2, PropertyId = 7, Amount = 45000, TransactionType = "Rent", PaymentMethod = "M-Pesa", TransactionDate = new DateTime(2023, 9, 4), ReferenceNumber = "QKT9823PL", Status = "Completed" },
            new Transaction { Id = 3, PropertyId = 7, Amount = 45000, TransactionType = "Rent", PaymentMethod = "M-Pesa", TransactionDate = new DateTime(2023, 10, 5), ReferenceNumber = "QLU0925SM", Status = "Completed" },
            new Transaction { Id = 4, PropertyId = 7, Amount = 90000, TransactionType = "Deposit", PaymentMethod = "M-Pesa", TransactionDate = new DateTime(2023, 7, 28), ReferenceNumber = "QHR7620JK", Status = "Completed" },
            new Transaction { Id = 5, PropertyId = 10, Amount = 18000, TransactionType = "Rent", PaymentMethod = "M-Pesa", TransactionDate = new DateTime(2023, 6, 9), ReferenceNumber = "QFP5418HG", Status = "Completed" },
            new Transaction { Id = 6, PropertyId = 10, Amount = 18000, TransactionType = "Rent", PaymentMethod = "M-Pesa", TransactionDate = new DateTime(2023, 7, 10), ReferenceNumber = "QGQ6519IH", Status = "Completed" },
            new Transaction { Id = 10, PropertyId = 1, Amount = 85000, TransactionType = "Rent", PaymentMethod = "Bank Transfer", TransactionDate = new DateTime(2023, 1, 3), ReferenceNumber = "BT39265871", Status = "Completed" },
            new Transaction { Id = 11, PropertyId = 1, Amount = 85000, TransactionType = "Rent", PaymentMethod = "Bank Transfer", TransactionDate = new DateTime(2023, 2, 2), ReferenceNumber = "BT40276982", Status = "Completed" },
            new Transaction { Id = 17, PropertyId = 1, Amount = 12000, TransactionType = "Maintenance", PaymentMethod = "M-Pesa", TransactionDate = new DateTime(2023, 5, 22), ReferenceNumber = "MM57628190", Status = "Completed" },
            new Transaction { Id = 21, PropertyId = 5, Amount = 25000, TransactionType = "Maintenance", PaymentMethod = "M-Pesa", TransactionDate = new DateTime(2023, 10, 10), ReferenceNumber = "MM61852431", Status = "Pending" }
        };
    }
    
    private void FilterByProperty(ChangeEventArgs e)
    {
        string propertyId = e.Value.ToString();
        
        if (string.IsNullOrEmpty(propertyId))
        {
            filteredTransactions = transactions;
        }
        else
        {
            filteredTransactions = transactions.Where(t => t.PropertyId == int.Parse(propertyId)).ToList();
        }
    }
    
    private string GetPropertyName(int propertyId)
    {
        var property = properties.FirstOrDefault(p => p.Id == propertyId);
        return property?.Name ?? $"Property #{propertyId}";
    }
    
    public class Property
    {
        public int Id { get; set; }
        public string Name { get; set; } = "";
    }
    
    public class Transaction
    {
        public int Id { get; set; }
        public int PropertyId { get; set; }
        public decimal Amount { get; set; }
        public string TransactionType { get; set; } = "";
        public string PaymentMethod { get; set; } = "";
        public DateTime TransactionDate { get; set; }
        public string ReferenceNumber { get; set; } = "";
        public string Status { get; set; } = "";
    }
}